package pl.mpanfil.adventofcode.year2017;

import static org.junit.Assert.*;
import org.junit.Test;
import pl.mpanfil.adventofcode.year2017.Day1;

public class Day1Test {

    private final Day1 day1 = new Day1();

    @Test
    public void testSolve1() {
        assertEquals(day1.solve1("1122"), 3);
        assertEquals(day1.solve1("1111"), 4);
        assertEquals(day1.solve1("1234"), 0);
        assertEquals(day1.solve1("91212129"), 9);
    }

    @Test
    public void testSolve2() {
        assertEquals(day1.solve2("1212"), 6);
        assertEquals(day1.solve2("1221"), 0);
        assertEquals(day1.solve2("123123"), 12);
        assertEquals(day1.solve2("12131415"), 4);
    }

    @Test
    public void testSolution1() {
        String toSolve = "516299281491169512719425276194596424291268712697155863651846937925928456958813624428156218468" +
                "331423858422613471962165756423837756856519754524985759763747559711257977361228357678293572698839754444" +
                "752898835313399815748562519958329927911861654784216355489319995566297499836295985943899373615223375271" +
                "231128914745273184498915241488393761676799914385265459983923743146555465177886491979962465918888396664" +
                "233693243983969412682561799628789569294374554575677368219724142536789649121758582991345537639888858113" +
                "763738518511184439854223386868764189133964543721941169786274781775658991329331759679943342217578532643" +
                "519615296424396487669451453728113114748217177826874953466435436129165295379157226345786756899935747336" +
                "785161745487933721527239394118721517195849186676814232887413175587327214144876898248571248517121796766" +
                "248817366614333915154796983612174281237846165129114988453188844745119798643314857871527757831265298846" +
                "833327863781341559381238458322786192379487455671563757123534253463563421716138641611915686247343417126" +
                "655317378639314168461345613427262786624689498485599942336813995725145169355942616672812792174556866436" +
                "158375938988738721253664772584577384558696477546232189312287262439452141564522329987139692281984783513" +
                "691857538335537553448919819545332125483128878925492334361562192621672993868479566688564752226111784486" +
                "619789588318171745995253645886833872665447241245329935643883892447524286642296955354249478815116517315" +
                "832179925494818748478164317669471654464867111924676961162162841232473474394739793968624974397916495667" +
                "233337397241933765513777241916359166994384923869741468174653353541147616645393917694581811193977311981" +
                "752554551499629219873391493426883886536219455848354426461562995284162323961773644581815633779762634745" +
                "339565196798724847722781666948626231631632144371873154872575615636322965353254642186897127423352618879" +
                "431499138418872356116624818733232445649188793318829748789349813295218673497291134164395739665667255443" +
                "366383299669973689528188264386373591424149784473698487315316676637165317972648916116755224598519934598" +
                "889627918883283534261513179931798591959489372165295";
        System.out.println(day1.solve1(toSolve));
    }

    @Test
    public void testSolution() {
        String toSolve = "516299281491169512719425276194596424291268712697155863651846937925928456958813624428156218468" +
                "331423858422613471962165756423837756856519754524985759763747559711257977361228357678293572698839754444" +
                "752898835313399815748562519958329927911861654784216355489319995566297499836295985943899373615223375271" +
                "231128914745273184498915241488393761676799914385265459983923743146555465177886491979962465918888396664" +
                "233693243983969412682561799628789569294374554575677368219724142536789649121758582991345537639888858113" +
                "763738518511184439854223386868764189133964543721941169786274781775658991329331759679943342217578532643" +
                "519615296424396487669451453728113114748217177826874953466435436129165295379157226345786756899935747336" +
                "785161745487933721527239394118721517195849186676814232887413175587327214144876898248571248517121796766" +
                "248817366614333915154796983612174281237846165129114988453188844745119798643314857871527757831265298846" +
                "833327863781341559381238458322786192379487455671563757123534253463563421716138641611915686247343417126" +
                "655317378639314168461345613427262786624689498485599942336813995725145169355942616672812792174556866436" +
                "158375938988738721253664772584577384558696477546232189312287262439452141564522329987139692281984783513" +
                "691857538335537553448919819545332125483128878925492334361562192621672993868479566688564752226111784486" +
                "619789588318171745995253645886833872665447241245329935643883892447524286642296955354249478815116517315" +
                "832179925494818748478164317669471654464867111924676961162162841232473474394739793968624974397916495667" +
                "233337397241933765513777241916359166994384923869741468174653353541147616645393917694581811193977311981" +
                "752554551499629219873391493426883886536219455848354426461562995284162323961773644581815633779762634745" +
                "339565196798724847722781666948626231631632144371873154872575615636322965353254642186897127423352618879" +
                "431499138418872356116624818733232445649188793318829748789349813295218673497291134164395739665667255443" +
                "366383299669973689528188264386373591424149784473698487315316676637165317972648916116755224598519934598" +
                "889627918883283534261513179931798591959489372165295";
        System.out.println(day1.solve2(toSolve));
    }
}